(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{229:function(e,n,r){"use strict";r.r(n);var t=r(0),i=r.n(t),a=r(250),l=r.n(a),o=r(249),k=r(251),s="# Bidragsguide\n\n## Bidra til Jøkul\n\nVi er avhengige av at folk vil bidra til Jøkul. Der er «så mye å gjøre og så lite tid å gjøre det på», når man skal betjene en hel organisasjon i den digitale tidsalderen. Fremtind har mange ulike fagsystemer og kundeløsninger som ikke bare skal over i Fremtind-drakt, men som også skal forbedres og forenkles i tråd med Fremtinds visjon om å være et forsikringsselskap for morgendagens behov.\n\n### Vi utvikler på GitHub\n\nDu finner all koden, feilrapportene og backlogen til designsystemet i GitHub. Alt er er åpent, og du har mulighet til å påvirke ved å bidra i samtalen på GitHub.\n\n### Dette trenger du\n\n-   Node v.8.0.0 eller nyere\n-   Yarn\n-   Git 2.0.0 eller nyere\n\nVi bruker Yarn i stedet for npm, siden Yarn har bedre integrasjon mot monorepo-verktøyet Lerna, som brukes i Jøkul.\n\n### Slik håndterer vi brancher og versjoner\n\n-   Vi bruker monorepo med Lerna for å holde kontroll på de individuelle pakkene i repositoriet.\n-   Hver enkelt pakke følger semantisk versjonering.\n-   Nye versjoner blir automatisk generert fra commit-loggen, derfor er det satt regler for hvordan en commit skal se ut.\n\n### Slik organiserer vi branchene\n\nVi gjør vårt beste for å holde masteren ren og pen og sørger for at den alltid virker. Masteren er grunnlaget for pakkene som vi publiserer i npm-registeret. Vi sender normalt pull requester mot master.\n",d="# Pull requests\n\n## Sende en pull request til Jøkul\n\nVi i kjerneteamet følger med på det som skjer på GitHub-repoet til Jøkul.\nNår du sender inn en pull request, får du alltid tilbakemelding fra noen i kjerneteamet.\nDa kan vi enten velge å merge pull requesten, eller gi deg en tilbakemelding på hva du må gjøre før vi kan ta inn endringene dine.\n\nHvis det gjelder større API-endringer, kan det ta litt tid før vi kan merge, fordi vi kanskje må teste det i noen interne applikasjoner først.\n\n### Din første pull request\n\nFlott at du vil bidra! Her er noen smarte tips før du setter i gang:\n\n-   Sjekk i tråden på en oppgave at ingen andre har tatt den.\n-   Sjekk med den personen som eventuelt har tatt oppgaven og legg igjen en kommentar om at du ser på den.\n-   Kjerneteamet jobber etter en prioritert backlog, men vi er takknemlige for alle som vil ta tak i oppgaver som har lavere prioritet.\n-   Følg gjerne med på andres pull requests og kom med kommentarer og tilbakemeldinger. Da plukker du kjapt opp hva som er viktig og ikke for Jøkul.\n\n### Slik sender du en pull request\n\n1. Lag en ny branch. Hvis du ikke har tilgang til prosjektet, må du forke det først.\n2. Fra rot i prosjektet, kjører du `yarn` og `yarn build`.\n3. Fiks feilen eller legg til ny funksjonalitet.\n4. Legg til tester.\n5. Sjekk at alle testene blir grønne når du tester med `yarn test` på rot.\n6. Legg til endrede filer i stage med `git add`.\n7. Commit med `yarn commit` fra rot, slik at du får hjelp til å lage en korrekt commit-melding. Hvis du kjenner til conventional commit style godt fra før, kan du utføre commit med Git som vanlig. \nLint, prettier og typesjekk blir kjørt automatisk.\n8. Push og opprett en pull request mot Jøkul. \n9. Fyll ut malen som dukker opp i GitHub.\n",m='# Koden i Jøkul\n\n## Slik skriver du kode til Jøkul\n\nJøkul er et designsystem, et bibliotek med komponenter. Det gir litt andre utfordringer enn når du driver med klientutvikling. Her får du en liten innføring i hvordan vi jobber med Jøkul. Jøkul brukes av mange forskjellige klienter, med forskjellige behov og ønsker. Det er viktig at vi balanserer funksjonalitet, brukervennlighet, pakkestørrelse og kompleksitet i hver enkelt komponent.\n\n### Hva brukes\n\n-   Språk: Typescript\n-   JS-rammeverk: React\n-   Byggverktøy: Rollup\n-   Test runner: Jest\n-   Test rammeverk:\n-   CSS-preprosessor: Scss\n\n### Slik har vi organisert pakkene\n\nAlle komponentene er organisert under `/packages`. De som slutter på `-react` er react-pakker. De som ikke har en endelse er stilpakker. Stilpakkene skal være generelle og du kan bruke dem uten noe javascript-rammeverk. Hver enkelt pakke inneholder et eksempel, som du kan kan starte med `yarn dev` fra hver enkelt pakke. Noen av stilpakkene mangler eksempler, fordi det kreves en del javascript for å få eksempelet til å kjøre. `Dropdown` er et slikt tilfelle.\n\n### Slik lager du en ny pakke\n\n1. Gå til rot og kjør kommandoen `lerna create pakke-navn`.\n2. Du får noen spørsmål om pakken. Fyll ut så godt du kan.\n3. Når pakken er opprettet, finner du en pakke som er lik den du har laget. Kopier de script- og oppsettfilene du trenger, for eksempel tsconfig-for-declarations.json for React-pakker.\n\n### Slik lenker du pakker sammen\n\nHvis du vil legge til en pakke i en annen, kan du fra hvor som helst i prosjektet kjøre `lerna add pakke-som-skal-legges-til --scope=pakken-den-skal-inn-i`\n\n### Slik legger du til en avhengighet\n\nDet finnes avhengigheter på ulike nivåer i Jøkul. Globale avhengigheter, for eksempel de som trengs til å kjøre en byggejobb, ligger på rotnivå. Du kan legge til en ny pakke på rotnivå, med kommandoen `yarn add pakke -W`. Hvis du bare skal utvikle, bruker du `-DW`.\n\nHvis avhengigheten er lokal, legger vi dem vanligvis på pakkenivå, slik det er beskrevet i "Slik lenker du pakker sammen". Bruk kommandoen `yarn add` for å legge til som normalt her. Før du gjør det, er det lurt å tenke på om den skal sendes med komponenten eller om brukeren av komponenten har ansvaret for å ha avhengigheten i sitt prosjekt. React bør for eksempel være en `peerDependency`, slik at brukeren ikke ender opp med flere utgaver av React i sin pakke.\n';r(211);function g(){return i.a.createElement(o.d,{isComponent:!0},i.a.createElement("div",{className:"portal-contribute"},i.a.createElement("section",{className:"portal-contribute__section portal-contribute__section-1"},i.a.createElement(l.a,{renderers:k.b,source:s})),i.a.createElement("section",{className:"portal-contribute__section portal-contribute__section-2"},i.a.createElement(l.a,{renderers:k.b,source:m})),i.a.createElement("section",{className:"portal-contribute__section portal-contribute__section-3"},i.a.createElement(l.a,{renderers:k.b,source:d}))))}r.d(n,"default",function(){return g})}}]);
//# sourceMappingURL=component---src-pages-developer-contribute-tsx-084e46f979bcd1eb626e.js.map